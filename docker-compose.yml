version: "3.8"
services:
    homeassistant:
        container_name: homeassistant
        image: homeassistant/home-assistant:stable
        volumes:
          - ./.config/homeassistant:/config
          - /etc/localtime:/etc/localtime:ro
        restart: unless-stopped
        network_mode: host
    plex:
        image: ghcr.io/linuxserver/plex
        container_name: plex
        environment:
            - PUID=100O
            - PGID=1000
            - VERSION=docker
            - PLEX_CLAIM=claim-Pq4AyzqjyTTApf5_88pi
        ports: 
            - 32400:32400
            - 1900:1900/udp
            - 3005:3005
            - 5352:5353/udp
            - 8324:8324
            - 32410:32410/udp
            - 32412:32412/udp
            - 32413:32413/udp
            - 32414:32414/udp
            - 32469:32469
        volumes:
            - ./.config/plex:/config
            - ./media/tv:/tv
            - ./media/movies:/movies
            - ./media/music:/music
            - ./media/photos:/photos
            - ./media/comics:/comics
            - ./media/media:/media
        restart: unless-stopped
        labels:
            - traefik.enable=true
            - traefik.http.routers.plex.entrypoints=http,https
            - traefik.http.routers.plex.rule=Host(`plex.homeassistant.local`)
            - traefik.http.routers.plex.tls=true
            - traefik.http.routers.plex.service=plex
            - traefik.http.services.plex.loadbalancer.server.port=32400
    sonarr:
        image: ghcr.io/linuxserver/sonarr
        container_name: sonarr
        environment:
            - PUID=100O
            - PGID=1000
            - TZ=Europe/Brussels
        volumes:
            - ./.config/sonarr:/config
            - ./media/tv:/tv
            - ./downloads:/downloads
        ports:
            - 8989:8989
        restart: unless-stopped
        labels:
            - traefik.enable=true
            - traefik.http.routers.sonarr.entrypoints=http,https
            - traefik.http.routers.sonarr.rule=Host(`sonarr.homeassistant.local`)
            - traefik.http.routers.sonarr.tls=true
            - traefik.http.routers.sonarr.service=sonarr
            - traefik.http.services.sonarr.loadbalancer.server.port=8989
    radarr:
        image: ghcr.io/linuxserver/radarr
        container_name: radarr
        environment:
            - PUID=100O
            - PGID=1000
            - TZ=Europe/Brussels
        volumes:
            - ./.config/radarr:/config
            - ./media/movies:/movies
            - ./downloads:/downloads
        ports:
            - 7878:7878
        restart: unless-stopped
        labels:
            - traefik.enable=true
            - traefik.http.routers.radarr.entrypoints=http,https
            - traefik.http.routers.radarr.rule=Host(`radarr.homeassistant.local`)
            - traefik.http.routers.radarr.tls=true
            - traefik.http.routers.radarr.service=radarr
            - traefik.http.services.radarr.loadbalancer.server.port=7878
    deluge:
        image: ghcr.io/linuxserver/deluge
        container_name: deluge
        ports:
            - 8112:8112
        environment:
            - PUID=100O
            - PGID=1000
            - TZ=Europe/Brussels
            - DELUGE_LOGLEVEL=error 
        volumes:
            - ./.config/deluge:/config
            - ./downloads:/downloads
        restart: unless-stopped
        labels:
            - traefik.enable=true
            - traefik.http.routers.deluge.entrypoints=http,https
            - traefik.http.routers.deluge.rule=Host(`deluge.homeassistant.local`)
            - traefik.http.routers.deluge.tls=true
            - traefik.http.routers.deluge.service=deluge
            - traefik.http.services.deluge.loadbalancer.server.port=8112
    jackett:
        image: ghcr.io/linuxserver/jackett
        container_name: jackett
        environment:
            - PUID=100O
            - PGID=1000
            - TZ=Europe/Brussels
            - AUTO_UPDATE=true #optional
        volumes:
            - ./.config/jackett:/config
            - ./downloads:/downloads
        ports:
            - 9117:9117
        restart: unless-stopped
        labels:
            - traefik.enable=true
            - traefik.http.routers.jackett.entrypoints=http,https
            - traefik.http.routers.jackett.rule=Host(`jackett.homeassistant.local`)
            - traefik.http.routers.jackett.tls=true
            - traefik.http.routers.jackett.service=jackett
            - traefik.http.services.jackett.loadbalancer.server.port=9117
    traktarr:
        container_name: traktarr
        command: traktarr run
        image: eafxx/traktarr
        volumes:
            - ./.config/traktarr:/config
        environment:
            - PUID=100O
            - PGID=1000
            - TZ=Europe/Brussels
            - DELAY=2.5        
            - SORT=rating
            - NOSEARCH=yes
            - NOTIFICATIONS=yes
            - BLACKLIST=yes
            - RUNNOW=no
            - SKIPUPDATE=no
            - APP_BRANCH=master 
        restart: unless-stopped
    # dnsmasq:
    #     container_name: dnsmasq
    #     restart: unless-stopped
    #     image: jpillora/dnsmasq:latest
    #     ports:
    #         - 53:53/udp
    #     volumes:
    #         - ./.config/dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf:ro
    #         - ./.config/dnsmasq/hosts:/etc/hosts:ro
    #         - ./.config/dnsmasq/resolv.conf:/etc/resolv.conf:ro
    traefik:
        container_name: traefik
        restart: unless-stopped
        image: traefik:latest
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./.config/certs:/certs:ro
            - ./.config/traefik/traefik.yml:/traefik.yml:ro
            - ./.config/traefik/dynamic.yml:/dynamic.yml:ro
        depends_on:
            - dnsmasq
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.entrypoints=http,https
            - traefik.http.routers.traefik.rule=Host(`traefik.homeassistant.local`)
            - traefik.http.routers.traefik.tls=true
            - traefik.http.routers.traefik.service=api@internal
networks:
    default:
        external:
            name: docker